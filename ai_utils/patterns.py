import pytz
import random




joke_keywords = [
    'Tell me a joke',
    'Tell a funny joke',
    'Share a joke',
    'Give me a joke',
    'Joke time',
    'Make me laugh',
    'Crack a joke',
    'Funny joke',
    'Humorous joke',
    'Joke of the day',
    'One-liner joke',
    'Pun joke',
    'Knock-knock joke',
    'Dad joke',
    'Silly joke',
    'Cheesy joke',
    'Hilarious joke',
    'Laugh-inducing joke',
    'Comic joke',
    'Witty joke',
    'Amusing joke',
    'Entertaining joke',
    'Light-hearted joke',
    'Giggle-worthy joke',
    'Laugh-out-loud joke',
    'Humor-filled joke',
    'Joke for a good laugh',
    'Tell me something funny',
    'Crack me up',
    'Make me smile',
    'Jokester time',
    'Funny story',
    'Share a humorous joke',
    'Joke for amusement',
    'Tell a quick joke',
    'Brighten my day with a joke',
    'Make me burst into laughter',
    'Tickle my funny bone',
    'Entertain me with a joke',
    'Amuse me',
    'Tell me a hilarious joke',
    'Joke master time',
    'Funny punchline',
    'Share a witty joke',
    'Joke for entertainment',
    'Joke to lighten the mood',
    'Tell me a rib-tickling joke',
    'Crack a smile with a joke'
]

# Pattern for matching keywords for generating a joke
joke_pattern = r'\b(?:{})\b'.format('|'.join(joke_keywords))

weekday_keywords = [
    'Weekday of a date',
    'Day of the week',
    'What day is it',
    'Weekday inquiry',
    'Specific date inquiry',
    'Day of the week inquiry',
    'Date weekday',
    'Weekday check',
    'Check specific date',
    'Determine day of the week',
    'Day of the week of a date',
    'Inquire about specific date',
    'Find weekday of a date',
    'Weekday calculation',
    'What day falls on a date',
    'Weekday on a specific date',
    'Get the weekday of a date',
    'Day of the week of a specific date',
    'Find the day of the week',
    'Calculate weekday of a date',
    'Weekday information',
    'Specific date weekday inquiry',
    'Find out the day of the week',
    'Weekday determination',
    'Check the weekday of a date',
    'Day of the week for a specific date',
    'Find the weekday of a date',
    'Weekday of a given date',
    'Get the day of the week',
    'Weekday lookup',
    'Determine weekday of a date',
    'Find the day of the week for a date',
    'Weekday for a particular date',
    'Get the weekday for a specific date',
    'Find out what day of the week',
    'Weekday query',
    'Day of the week for a given date',
    'Find the day of the week of a date',
    'Weekday lookup for a specific date',
    'Get the day of the week for a date',
    'Weekday for a specific date inquiry',
    'What day does a date fall on',
    'Weekday calculation for a date',
    'Get the weekday for a particular date',
    'Find out the day of the week for a date',
    'Weekday determination for a specific date',
    'What is the weekday of a specific date'
]

# Pattern for matching keywords for determining the weekday of a specific date
weekday_pattern = r'\b(?:{})\b'.format('|'.join(weekday_keywords))

date_difference_keywords = [
    'Calculate date difference',
    'Difference between two dates',
    'Number of days between dates',
    'Days between two dates',
    'Date duration calculation',
    'Calculate days',
    'Count days between dates',
    'Find the difference in days',
    'Time difference calculation',
    'Compute date interval',
    'Date range calculation',
    'Days elapsed between dates',
    'Duration between two dates',
    'Find the number of days',
    'Calculate the period between dates',
    'Days count calculation',
    'Date offset calculation',
    'Calculate the time span',
    'Count the days between',
    'Interval between two dates',
    'Calculate the days elapsed',
    'Duration calculation',
    'Days between given dates',
    'Date comparison calculation',
    'Calculate the date gap',
    'Find the days between dates',
    'Compute the date difference',
    'Number of days calculation',
    'Days duration calculation',
    'Count the days',
    'Interval calculation',
    'Calculate the number of days',
    'Days between two given dates',
    'Calculate the date range',
    'Find the duration between dates',
    'Compute the days',
    'Time span calculation',
    'Days offset calculation',
    'Calculate the days count',
    'Date duration calculation between',
    'Calculate the days elapsed between',
    'Duration between two given dates',
    'Find the number of days between',
    'Calculate the period between',
    'Days count calculation between',
    'Date offset calculation between',
    'Calculate the time span between',
    'Calculate the days duration'
]

# Pattern for matching keywords for calculating the difference between two dates
date_difference_pattern = r'\b(?:{})\b'.format('|'.join(date_difference_keywords))

next_day_keywords = [
    'Next Monday',
    'Next Tuesday',
    'Next Wednesday',
    'Next Thursday',
    'Next Friday',
    'Next Saturday',
    'Next Sunday',
    'Upcoming Monday',
    'Upcoming Tuesday',
    'Upcoming Wednesday',
    'Upcoming Thursday',
    'Upcoming Friday',
    'Upcoming Saturday',
    'Upcoming Sunday',
    'When is the next Monday',
    'When is the next Tuesday',
    'When is the next Wednesday',
    'When is the next Thursday',
    'When is the next Friday',
    'When is the next Saturday',
    'When is the next Sunday',
    'Tell me the next Monday',
    'Tell me the next Tuesday',
    'Tell me the next Wednesday',
    'Tell me the next Thursday',
    'Tell me the next Friday',
    'Tell me the next Saturday',
    'Tell me the next Sunday',
    'What day is the next Monday',
    'What day is the next Tuesday',
    'What day is the next Wednesday',
    'What day is the next Thursday',
    'What day is the next Friday',
    'What day is the next Saturday',
    'What day is the next Sunday',
    'Next Monday date',
    'Next Tuesday date',
    'Next Wednesday date',
    'Next Thursday date',
    'Next Friday date',
    'Next Saturday date',
    'Next Sunday date',
    'Next Monday day of the week',
    'Next Tuesday day of the week',
    'Next Wednesday day of the week',
    'Next Thursday day of the week',
    'Next Friday day of the week',
    'Next Saturday day of the week',
    'Next Sunday day of the week'
]

# Pattern for matching keywords for finding the next occurrence of a specific day of the week
next_day_pattern = r'\b(?:{})\b'.format('|'.join(next_day_keywords))

days_until_keywords = [
    'Days until a date',
    'Count days till',
    'How many days are there until',
    'Number of days till',
    'Days remaining till',
    'Days left till',
    'Calculate days till',
    'Count down days till',
    'Find the days until',
    'Time until a date',
    'Calculate the number of days until',
    'Days between today and',
    'Calculate the remaining days until',
    'Number of days between today and',
    'Time remaining till',
    'Count the days until',
    'Calculate the days remaining until',
    'Number of days left till',
    'Days till a specific date',
    'Find the number of days until',
    'Calculate the days till',
    'Number of days between now and',
    'Count the remaining days until',
    'Calculate the days left till',
    'How many days until a specific date',
    'Time left till',
    'Count down the days until',
    'Calculate the time until',
    'Find the remaining days until',
    'Number of days from now until',
    'Count the days left till',
    'Calculate the time remaining till',
    'Days till a particular date',
    'Determine the days until',
    'Calculate the days between now and',
    'How many days are left until',
    'Count the days remaining until',
    'Calculate the days between today and',
    'Number of days until a specific date',
    'Calculate the time left till',
    'Days till a given date',
    'Find the days remaining until',
    'Calculate the days from now until',
    'How many days are there left until',
    'Count the days between today and',
    'Calculate the number of days from now until',
    'Days till a certain date',
    'Determine the number of days until',
    'Calculate the days between now and',
    'How many days are left till'
]

# Pattern for matching keywords for determining the number of days until a specific date
days_until_pattern = r'\b(?:{})\b'.format('|'.join(days_until_keywords))


# Pattern for matching keywords for retrieving the current time in a specific timezone

week_keywords = [
    'week number',
    'current week',
    'current week number',
    'what week is it',
    'which week is it',
    'week of the year',
    'current week of the year',
    'week this year',
    'week this',
    'this week number',
    'current week no',
    'week no',
    'week at the moment',
    'week now',
    'current week count',
    'current week index',
    'week index',
    'week at present',
    'week at this time',
    'week at this moment',
    'week right now',
    'week of today',
    'week today',
    'current week position',
    'week position',
    'current week ranking',
    'week ranking',
    'week in progress',
    'current week status',
    'current week identifier',
    'week identifier',
    'current week order',
    'week order',
    'current week sequence',
    'week sequence',
    'current week placement',
    'week placement',
    'week during the year',
    'current week during the year',
    'current week within the year',
    'week within the year',
    'current week in the calendar',
    'week in the calendar',
    'current week of the calendar',
    'week of the calendar',
    'current week in the year',
    'week in the year',
    'current week in the date',
    'week in the date',
    'current week in the time',
    'week in the time'
]

# Pattern for matching keywords for retrieving the current week no
week_pattern = r'\b(?:{})\b'.format('|'.join(week_keywords))

leap_year_keywords = [
    'leap year',
    'is it a leap year',
    'is this a leap year',
    'is year a leap year',
    'is year leap',
    'is it leap',
    'is this leap',
    'is current year a leap year',
    'is current year leap',
    'is current year leap year',
    'is the year leap',
    'is the year a leap year',
    'check leap year',
    'verify leap year',
    'determine leap year',
    'is it a leap',
    'is this a leap',
    'is current year a leap',
    'is current year a leap year',
    'is the year a leap',
    'is the year leap',
    'is year divisible by 4',
    'is year divisible by 100',
    'is year divisible by 400',
    'year divisible by 4',
    'year divisible by 100',
    'year divisible by 400',
    'is year evenly divisible by 4',
    'is year evenly divisible by 100',
    'is year evenly divisible by 400',
    'check if it is a leap year',
    'check if this is a leap year',
    'check if year is a leap year',
    'is year a leap year or not',
    'is it a leap or not',
    'is this a leap or not',
    'is current year a leap or not',
    'is the year a leap or not',
    'is year divisible by 4 or not',
    'is year divisible by 100 or not',
    'is year divisible by 400 or not',
    'year divisible by 4 or not',
    'year divisible by 100 or not',
    'year divisible by 400 or not',
    'is year evenly divisible by 4 or not',
    'is year evenly divisible by 100 or not',
    'is year evenly divisible by 400 or not',
    'check if it is a leap or not',
    'check if this is a leap or not',
    'check if year is a leap or not'
]

leap_year_pattern = r'\b(?:{})\b'.format('|'.join(leap_year_keywords))

number_keywords = list(set([
    'number info',
    'information about number',
    'number details',
    'tell me about the number',
    'get details of number',
    'what can you tell me about the number',
    'number statistics',
    'number facts',
    'number properties',
    'number characteristics',
    'number analysis',
    'number description',
    'number attributes',
    'number profile',
    'number breakdown',
    'number overview',
    'number summary',
    'number insights',
    'number specifics',
    'number data',
    'number figures',
    'number report',
    'number record',
    'number background',
    'number history',
    'number significance',
    'number significance',
    'number significance',
    'number importance',
    'number relevance',
    'number usage',
    'number applications',
    'number examples',
    'number references',
    'number sources',
    'number origins',
]))

number_info_pattern = r'\b(?:{})\b'.format('|'.join(number_keywords))

even_numbers_keywords = [
    'even numbers',
    'all even numbers',
    'even integers',
    'all even integers',
    'even values',
    'all even values',
    'even digits',
    'all even digits',
    'even sequence',
    'even series',
    'even range',
    'even between',
    'even from',
    'even in',
    'even within',
    'even inclusive',
    'even numbers between',
    'all even numbers between',
    'even integers between',
    'all even integers between',
    'even values between',
    'all even values between',
    'even digits between',
    'all even digits between',
    'even sequence between',
    'even series between',
    'even range between',
    'even between numbers',
    'all even between numbers',
    'even integers between numbers',
    'all even integers between numbers',
    'even values between numbers',
    'all even values between numbers',
    'even digits between numbers',
    'all even digits between numbers',
    'even sequence between numbers',
    'even series between numbers',
    'even range between numbers',
]

even_numbers_pattern = r'\b(?:{})\b'.format('|'.join(even_numbers_keywords))

odd_numbers_keywords = [
    'odd numbers',
    'all odd numbers',
    'odd integers',
    'all odd integers',
    'odd values',
    'all odd values',
    'odd digits',
    'all odd digits',
    'odd sequence',
    'odd series',
    'odd range',
    'odd between',
    'odd from',
    'odd in',
    'odd within',
    'odd inclusive',
    'odd numbers between',
    'all odd numbers between',
    'odd integers between',
    'all odd integers between',
    'odd values between',
    'all odd values between',
    'odd digits between',
    'all odd digits between',
    'odd sequence between',
    'odd series between',
    'odd range between',
    'odd between numbers',
    'all odd between numbers',
    'odd integers between numbers',
    'all odd integers between numbers',
    'odd values between numbers',
    'all odd values between numbers',
    'odd digits between numbers',
    'all odd digits between numbers',
    'odd sequence between numbers',
    'odd series between numbers',
    'odd range between numbers',
]

odd_numbers_pattern = r'\b(?:{})\b'.format('|'.join(odd_numbers_keywords))

prime_numbers_keywords = [
    'prime numbers',
    'all prime numbers',
    'prime integers',
    'all prime integers',
    'prime values',
    'all prime values',
    'prime digits',
    'all prime digits',
    'prime sequence',
    'prime series',
    'prime range',
    'prime between',
    'prime from',
    'prime in',
    'prime within',
    'prime inclusive',
    'prime numbers between',
    'all prime numbers between',
    'prime integers between',
    'all prime integers between',
    'prime values between',
    'all prime values between',
    'prime digits between',
    'all prime digits between',
    'prime sequence between',
    'prime series between',
    'prime range between',
    'prime between numbers',
    'all prime between numbers',
    'prime integers between numbers',
    'all prime integers between numbers',
    'prime values between numbers',
    'all prime values between numbers',
    'prime digits between numbers',
    'all prime digits between numbers',
    'prime sequence between numbers',
    'prime series between numbers',
    'prime range between numbers',
]

prime_numbers_pattern = r'\b(?:{})\b'.format('|'.join(prime_numbers_keywords))

fibonacci_numbers_keywords = [
    'fibonacci numbers',
    'all fibonacci numbers',
    'fibonacci sequence',
    'fibonacci series',
    'fibonacci values',
    'fibonacci digits',
    'fibonacci terms',
    'fibonacci elements',
    'fibonacci array',
    'fibonacci list',
    'fibonacci set',
    'fibonacci range',
    'fibonacci up to',
    'fibonacci until',
    'fibonacci below',
    'fibonacci under',
    'fibonacci above',
    'fibonacci beyond',
    'fibonacci within',
    'fibonacci inclusive',
    'fibonacci less than',
    'fibonacci greater than',
    'fibonacci smaller than',
    'fibonacci larger than',
    'fibonacci until limit',
    'fibonacci up to limit',
    'fibonacci below limit',
    'fibonacci under limit',
    'fibonacci above limit',
    'fibonacci beyond limit',
    'fibonacci within limit',
    'fibonacci inclusive limit',
    'fibonacci less than limit',
    'fibonacci greater than limit',
    'fibonacci smaller than limit',
    'fibonacci larger than limit',
    'fibonacci until number',
    'fibonacci up to number',
    'fibonacci below number',
    'fibonacci under number',
    'fibonacci above number',
    'fibonacci beyond number',
    'fibonacci within number',
    'fibonacci inclusive number',
    'fibonacci less than number',
    'fibonacci greater than number',
    'fibonacci smaller than number',
    'fibonacci larger than number',
    'fibonacci until value',
    'fibonacci up to value',
    'fibonacci below value',
    'fibonacci under value',
    'fibonacci above value',
    'fibonacci beyond value',
    'fibonacci within value',
    'fibonacci inclusive value',
    'fibonacci less than value',
    'fibonacci greater than value',
    'fibonacci smaller than value',
    'fibonacci larger than value',
]

fibonacci_numbers_pattern = r'\b(?:{})\b'.format('|'.join(fibonacci_numbers_keywords))

math_table_keywords = [
    'generate math table',
    'create math table',
    'make math table',
    'math table for',
    'multiplication table for',
    'table of',
    'math facts for',
    'times table for',
    'math chart for',
    'table for number',
    'table for the number',
    'table of number',
    'table of the number',
    'math table for number',
    'math table for the number',
    'math multiplication table for',
    'multiplication table of',
    'math facts of',
    'times table of',
    'math chart of',
    'table of multiplication for',
    'table of multiplication of',
    'math table for number 5',
    'math table for the number 5',
    'math multiplication table for 5',
    'multiplication table of 5',
    'math facts of 5',
    'times table of 5',
    'math chart of 5',
    'table of multiplication for 5',
    'table of multiplication of 5',
    'math table for 5',
]

math_table_pattern = r'\b(?:{})\b'.format('|'.join(math_table_keywords))

dice_keywords = [
    'roll dice',
    'roll a dice',
    'throw dice',
    'throw a dice',
    'dice roll',
    'dice throw',
    'get random number from dice',
    'get a random number from dice',
    'generate random number from dice',
    'generate a random number from dice',
    'random number from dice',
    'random number of dice',
    'random dice number',
    'dice random number',
    'dice result',
    'dice outcome',
    'dice value',
    'dice roll result',
    'dice roll outcome',
    'dice roll value',
    'random number from a die',
    'random number of a die',
    'random die number',
    'die random number',
    'die result',
    'die outcome',
    'die value',
    'die roll result',
    'die roll outcome',
    'die roll value',
    'roll dice once',
    'roll a dice once',
    'throw dice once',
    'throw a dice once',
    'roll single dice',
    'roll a single dice',
    'throw single dice',
    'throw a single dice',
    'roll one dice',
    'throw one dice',
    'roll a die',
    'throw a die',
    'get random number from a die',
    'get a random number from a die',
    'generate random number from a die',
    'generate a random number from a die',
    'random number from a die',
    'random die number',
    'die random number',
    'die result',
    'die outcome',
    'die value',
    'die roll result',
    'die roll outcome',
    'die roll value',
]

dice_pattern = r'\b(?:{})\b'.format('|'.join(dice_keywords))
random_card_keywords = [
    'random card',
    'pick a card',
    'choose a card',
    'select a card',
    'get a card',
    'draw a card',
    'random playing card',
    'pick a playing card',
    'choose a playing card',
    'select a playing card',
    'get a playing card',
    'draw a playing card',
    'random playing card from deck',
    'pick a playing card from deck',
    'choose a playing card from deck',
    'select a playing card from deck',
    'get a playing card from deck',
    'draw a playing card from deck',
    'random card from deck',
    'pick a card from deck',
    'choose a card from deck',
    'select a card from deck',
    'get a card from deck',
    'draw a card from deck',
    'pick a random card',
    'choose a random card',
    'select a random card',
    'get a random card',
    'draw a random card',
    'pick a random playing card',
    'choose a random playing card',
    'select a random playing card',
    'get a random playing card',
    'draw a random playing card',
    'pick a random playing card from deck',
    'choose a random playing card from deck',
    'select a random playing card from deck',
    'get a random playing card from deck',
    'draw a random playing card from deck',
    'pick a random card from deck',
    'choose a random card from deck',
    'select a random card from deck',
    'get a random card from deck',
    'draw a random card from deck',
    'get a random card from a deck of cards',
    'pick a random card from a deck of cards',
    'choose a random card from a deck of cards',
    'select a random card from a deck of cards',
    'draw a random card from a deck of cards',
]

deck_of_patterns =  r'\b(?:{})\b'.format('|'.join(random_card_keywords))

correction_keywords = [
    'correct',
    'fix',
    'revise',
    'edit',
    'rectify',
    'amend',
    'repair',
    'adjust',
    'modify',
    'improve',
    'rewrite',
    'refine',
    'redress',
    'remedy',
    'emend',
    'revamp',
    'mend',
    'rephrase',
    'reword',
    'rework',
    'rescript',
    'reformulate',
    'rectify this',
    'fix this',
    'revise this',
    'edit this',
    'rectify the text',
    'fix the text',
    'revise the text',
    'edit the text',
    'correct this sentence',
    'fix this sentence',
    'revise this sentence',
    'edit this sentence',
    'correct the sentence',
    'fix the sentence',
    'revise the sentence',
    'edit the sentence',
    'correct the following',
    'fix the following',
    'revise the following',
    'edit the following',
    'correction needed',
    'text correction',
    'sentence correction',
    'correct my text',
    'fix my text',
    'revise my text',
    'edit my text',
    'correction required',
    'text correction needed',
]

correction_patterne = r'\b(?:{})\b'.format('|'.join(correction_keywords))

dice_keywords = [
    'roll a dice',
    'roll the dice',
    'roll dice',
    'throw a dice',
    'throw the dice',
    'throw dice',
    'toss a dice',
    'toss the dice',
    'toss dice',
    'get a random number from a dice',
    'get a random number from dice',
    'get a random number from the dice',
    'generate a random number from a dice',
    'generate a random number from dice',
    'generate a random number from the dice',
    'random dice number',
    'random number from dice',
    'dice roll',
    'dice throw',
    'dice toss',
    'dice game',
    'dice gambling',
    'dice outcome',
    'dice result',
    'dice value',
    'dice face',
    'dice sides',
    'dice numbers',
    'dice simulation',
    'dice probability',
    'dice statistics',
    'dice roll simulation',
    'dice roll probability',
    'dice roll statistics',
    'dice roll outcome',
    'dice throw simulation',
    'dice throw probability',
    'dice throw statistics',
    'dice throw outcome',
    'dice toss simulation',
    'dice toss probability',
    'dice toss statistics',
    'dice toss outcome',
    'random dice roll',
    'random dice throw',
    'random dice toss',
    'randomize dice',
    'randomize dice roll',
    'randomize dice throw',
    'randomize dice toss',
]

toss_keywords = [
    'coin toss',
    'coin flip',
    'flip a coin',
    'flip the coin',
    'toss a coin',
    'toss the coin',
    'coin flipping',
    'coin tossing',
    'flip coin',
    'toss coin',
    'coin toss game',
    'coin flip outcome',
    'coin toss result',
    'coin flip simulation',
    'coin toss simulation',
    'coin flip probability',
    'coin toss probability',
    'random coin toss',
    'random coin flip',
    'generate a random coin toss',
    'generate a random coin flip',
    'get a random coin toss',
    'get a random coin flip',
    'coin side',
    'coin face',
    'coin outcome',
    'coin result',
    'coin flipper',
    'coin tosser',
    'coin tosser',
    'coin flipper',
    'coin flipper',
    'coin tosser',
    'coin tosser',
    'coin flipper',
    'coin flip value',
    'coin toss value',
    'coin flip statistics',
    'coin toss statistics',
    'coin flip game',
    'coin toss game',
    'coin flipping game',
    'coin tossing game',
    'randomize coin toss',
    'randomize coin flip',
    'randomize coin outcome',
]

toss_pattern =  r'\b(?:{})\b'.format('|'.join(toss_keywords))



def expression_patterns(expression):
    numeric_answer = eval(expression)
    text_variations = [
        f"The result of {expression} is <strong >{numeric_answer}</strong>.",
        f"After evaluating {expression}, we find the answer to be <strong >{numeric_answer}</strong>.",
        f"The solution to {expression} is <strong >{numeric_answer}</strong>.",
        f"Upon solving {expression}, we obtain the result <strong >{numeric_answer}</strong>.",
        f"The expression {expression} yields <strong >{numeric_answer}</strong> as the solution.",
        f"After computation, {expression} results in <strong >{numeric_answer}</strong>.",
        f"Confirming the calculations for {expression}, we arrive at the solution: <strong >{numeric_answer}</strong>.",
        f"Considering the context of {expression}, the solution is <strong >{numeric_answer}</strong>.",
        f"From our computations on {expression}, it can be concluded that the solution is <strong >{numeric_answer}</strong>.",
        f"In the context of {expression}, the answer is <strong >{numeric_answer}</strong>.",
        f"The expression {expression} evaluates to <strong >{numeric_answer}</strong>.",
        f"After solving {expression}, we get <strong >{numeric_answer}</strong>.",
        f"Evaluating {expression} yields the result <strong >{numeric_answer}</strong>.",
        f"The correctness of the result for {expression} is affirmed, and the answer is <strong >{numeric_answer}</strong>.",
        f"Verification of {expression} yields the solution <strong >{numeric_answer}</strong>.",
        f"{expression} evaluates to <strong >{numeric_answer}</strong>.",
        f"<strong >{numeric_answer}</strong> is the solution to {expression}.",
        f"We find that the answer to {expression} is <strong >{numeric_answer}</strong>.",
        f"The result of {expression} is <strong >{numeric_answer}</strong>.",
        f"Upon solving {expression}, we find the answer to be <strong >{numeric_answer}</strong>.",
        f"The solution to {expression} is <strong >{numeric_answer}</strong>.",
        f"Considering the context of {expression}, the answer is <strong >{numeric_answer}</strong>.",
        f"From our computations on {expression}, it can be concluded that the solution is <strong >{numeric_answer}</strong>.",
        f"In the context of {expression}, the answer is <strong >{numeric_answer}</strong>.",
        f"After solving {expression}, we get <strong >{numeric_answer}</strong>.",
        f"Evaluating {expression} yields the result <strong >{numeric_answer}</strong>.",
        f"The correctness of the result for {expression} is affirmed, and the answer is <strong >{numeric_answer}</strong>.",
        f"Verification of {expression} yields the solution <strong >{numeric_answer}</strong>.",
        f"{expression} evaluates to <strong >{numeric_answer}</strong>.",
        f"<strong >{numeric_answer}</strong> is the solution to {expression}.",
        f"We find that the answer to {expression} is <strong >{numeric_answer}</strong>.",
        f"The result of {expression} is <strong >{numeric_answer}</strong>.",
        f"Upon solving {expression}, we find the answer to be <strong >{numeric_answer}</strong>.",
        f"The solution to {expression} is <strong >{numeric_answer}</strong>.",
        f"Considering the context of {expression}, the answer is <strong >{numeric_answer}</strong>.",
        f"From our computations on {expression}, it can be concluded that the solution is <strong >{numeric_answer}</strong>.",
        f"In the context of {expression}, the answer is <strong >{numeric_answer}</strong>.",
        f"After solving {expression}, we get <strong >{numeric_answer}</strong>.",
        f"Evaluating {expression} yields the result <strong >{numeric_answer}</strong>.",
        f"The correctness of the result for {expression} is affirmed, and the answer is <strong >{numeric_answer}</strong>.",
        f"Verification of {expression} yields the solution <strong >{numeric_answer}</strong>.",
        f"{expression} evaluates to <strong >{numeric_answer}</strong>.",
        f"<strong >{numeric_answer}</strong> is the solution to {expression}.",
        f"We find that the answer to {expression} is <strong >{numeric_answer}</strong>.",
        f"The result of {expression} is <strong >{numeric_answer}</strong>.",
        f"Upon solving {expression}, we find the answer to be <strong >{numeric_answer}</strong>.",
        f"The solution to {expression} is <strong >{numeric_answer}</strong>.",
        f"Considering the context of {expression}, the answer is <strong >{numeric_answer}</strong>.",
        f"From our computations on {expression}, it can be concluded that the solution is <strong >{numeric_answer}</strong>.",
        f"In the context of {expression}, the answer is <strong >{numeric_answer}</strong>.",
        f"After solving {expression}, we get <strong >{numeric_answer}</strong>.",
        f"Evaluating {expression} yields the result <strong >{numeric_answer}</strong>.",
        f"The correctness of the result for {expression} is affirmed, and the answer is <strong >{numeric_answer}</strong>.",
        f"Verification of {expression} yields the solution <strong >{numeric_answer}</strong>.",
        f"{expression} evaluates to <strong >{numeric_answer}</strong>.",
        f"<strong >{numeric_answer}</strong> is the solution to {expression}.",
        f"We find that the answer to {expression} is <strong >{numeric_answer}</strong>."
    ]
    return random.choice(text_variations)

fake_possible_methods = ['address',
                        
 'administrative_unit',
 'aadhaar_card_number',
 'am_pm',
 'android_platform_token',
 'ascii_company_email',
 'ascii_email',
 'ascii_free_email',
 'ascii_safe_email',
 'bank_country',
 'basic_phone_number',
 'bban',
 'binary',
 'boolean',
 'bothify',
 'bs',
 'building_number',
 'catch_phrase',
 'century',
 'chrome',
 'city',
 'city_prefix',
 'city_suffix',
 'color',
 'color_hsl',
 'color_hsv',
 'color_name',
 'color_rgb',
 'color_rgb_float',
 'company',
 'company_email',
 'company_suffix',
 'coordinate',
 'country',
 'country_calling_code',
 'country_code',
 'credit_card_expire',
 'credit_card_full',
 'credit_card_number',
 'credit_card_provider',
 'credit_card_security_code',
 'cryptocurrency',
 'cryptocurrency_code',
 'cryptocurrency_name',
 'csv',
 'currency',
 'currency_code',
 'currency_name',
 'currency_symbol',
 'current_country',
 'current_country_code',
 'date',
 'date_between',
 'date_between_dates',
 'date_object',
 'date_of_birth',
 'date_this_century',
 'date_this_decade',
 'date_this_month',
 'date_this_year',
 'date_time',
 'date_time_ad',
 'date_time_between',
 'date_time_between_dates',
 'date_time_this_century',
 'date_time_this_decade',
 'date_time_this_month',
 'date_time_this_year',
 'day_of_month',
 'day_of_week',
 'dga',
 'domain_name',
 'domain_word',
 'dsv',
 'ean',
 'ean13',
 'ean8',
 'ein',
 'email',
 'emoji',
 'file_extension',
 'file_name',
 'file_path',
 'firefox',
 'first_name',
 'first_name_female',
 'first_name_male',
 'first_name_nonbinary',
 'fixed_width',
 'free_email',
 'free_email_domain',
 'future_date',
 'future_datetime',
 'get_providers',
 'hex_color',
 'hexify',
 'hostname',
 'http_method',
 'iana_id',
 'iban',
 'image',
 'image_url',
 'internet_explorer',
 'invalid_ssn',
 'ios_platform_token',
 'ipv4_address',
 'ipv4',
 'ipv4_network_class',
 'ipv4_private',
 'ipv4_public',
 'ipv6',
 'ipv6_address'
 'isbn10',
 'isbn13',
 'iso8601',
 'items',
 'itin',
 'job',
 'json',
 'json_bytes',
 'language_code',
 'language_name',
 'last_name',
 'last_name_female',
 'last_name_male',
 'last_name_nonbinary',
 'latitude',
 'latlng',
 'lexify',
 'license_plate',
 'linux_platform_token',
 'linux_processor',
 'local_latlng',
 'locale',
 'localized_ean',
 'localized_ean13',
 'localized_ean8',
 'location_on_land',
 'longitude',
 'mac_address',
 'mac_platform_token',
 'mac_processor',
 'md5',
 'military_apo',
 'military_dpo',
 'military_ship',
 'military_state',
 'mime_type',
 'month',
 'month_name',
 'msisdn',
 'name',
 'name_female',
 'name_male',
 'name_nonbinary',
 'nic_handle',
 'nic_handles',
 'null_boolean',
 'numerify',
 'opera',
 'paragraph',
 'paragraphs',
 'passport_dates',
 'passport_dob',
 'passport_full',
 'passport_gender',
 'passport_number',
 'passport_owner',
 'password',
 'past_date',
 'past_datetime',
 'phone_number',
 'port_number',
 'postalcode',
 'postalcode_in_state',
 'postalcode_plus4',
 'postcode',
 'postcode_in_state',
 'prefix',
 'prefix_female',
 'prefix_male',
 'prefix_nonbinary',
 'pricetag',
 'profile',
 'psv',
 'pybool',
 'pydecimal',
 'pydict',
 'pyfloat',
 'pyint',
 'pyiterable',
 'pylist',
 'pyobject',
 'pyset',
 'pystr',
 'pystr_format',
 'pystruct',
 'pytimezone',
 'pytuple',
 'random_choices',
 'random_digit',
 'random_digit_above_two',
 'random_digit_not_null',
 'random_digit_not_null_or_empty',
 'random_digit_or_empty',
 'random_element',
 'random_elements',
 'random_int',
 'random_letter',
 'random_letters',
 'random_lowercase_letter',
 'random_number',
 'random_sample',
 'random_uppercase_letter',
 'randomize_nb_elements',
 'rgb_color',
 'rgb_css_color',
 'ripe_id',
 'safari',
 'safe_color_name',
 'safe_domain_name',
 'safe_email',
 'safe_hex_color',
 'sbn9',
 'secondary_address'
 ]
#chat bot response

dummy_data_not_available_responses = (
    "I'm sorry, but I don't have access to dummy data at the moment. Is there anything else I can assist you with?",
    "Unfortunately, I can't provide dummy data right now. However, I can help with other queries or provide guidance on related topics.",
    "It seems like you're looking for dummy data, but I'm not equipped to handle that request. Can I help you with something else?",
    "I'm afraid I don't have the capability to generate dummy data. Is there another way I can assist you?",
    "I'm sorry, but generating dummy data is beyond my current capabilities. Let me know if there's anything else you need help with.",
    "Sorry, I can't help with dummy data. Is there anything else you'd like to know?",
    "Dummy data is not within my capabilities. Would you like assistance with something else?",
    "Unfortunately, I can't generate dummy data. Can I assist you with a different task?",
    "Generating dummy data is not something I can do. What else can I help you with?",
    "I'm sorry, but dummy data generation is not supported. How else can I assist you?",
    "Dummy data generation is not available. What other questions do you have?",
    "I don't have the ability to create dummy data. Is there another way I can assist you?",
    "I'm not capable of generating dummy data. Can I help you with anything else?",
    "Generating dummy data is not part of my capabilities. Is there anything else I can do for you?",
    "Sorry, I can't generate dummy data. How else can I assist you?",
    "I'm not able to create dummy data. Do you need help with anything else?",
    "Unfortunately, I'm unable to generate dummy data. Is there another task you'd like assistance with?",
    "I can't create dummy data for you. Can I help with something else?",
    "Dummy data creation is not something I'm able to do. How can I assist you otherwise?",
    "Sorry, I'm unable to provide dummy data. What else can I do for you?"
)


chat_bot_data = [ 
    {
   "tag" : 'greetings',
   "patterns": [
      "hi",
      "how are you",
      "is anyone there",
      "hello",
      "good day",
      "what's up",
      "how are ya",
      "heyy",
      "whatsup",
      "hey",
      "greetings",
      "hi, how's it going",
      "hola",
      "hey, what's going on",
      "hey, howdy",
      "hi, how are things",
      "what's cracking",
      "good morning, how can I assist you",
      "yo, what's up",
      "hiya",
      "hey there, ready to chat",
      "hi, what's new",
      "hello, how can I be of service",
      "hey, long time no see",
      "hi, how's your day going",
      "what's good",
      "hi, it's nice to see you",
      "hey, how's life treating you",
      "greetings and salutations"
   ],
   "responses": [
      "Hello!",
      "Good to see you again!",
      "Hi there, how can I help?",
      "Hey! What brings you here?",
      "Hiya! Ready for a chat?",
      "Hola! How can I assist you today?",
      "Hey there! I've been waiting for you.",
      "Hello! What's on your mind?",
      "Hi, friend! How can I make your day better?",
      "Hey, how's it going? What can I do for you?",
      "Greetings! I'm here to assist you.",
      "Hi, it's a good day to chat! What do you need?",
      "Hey, long time no see! How can I assist you today?",
      "Hi there! What's the latest in your world?",
      "Hello! Ready to dive into another conversation?",
      "Hey, howdy! What's on your agenda today?",
      "Hi, how are things? What can I help you with?",
      "What's up? Let's make your day awesome!",
      "Good morning! How can I brighten your day?",
      "Yo, what's up? Ready for some chat magic?",
      "Hi, how's your day going? What can I do for you?",
      "Greetings and salutations! How can I assist you today?",
      "Hello! How can I make your day better?",
      "Hey, it's nice to see you! What can I do for you?",
      "Hi there! What brings you to the chat today?",
      "Hey! Long time, no chat. What's up?",
      "Hi, how's life treating you? Anything I can help with?",
      "Hiya! Ready to rock this conversation?"
   ]
}
,
 {
   "tag" : "send_off", 
   "patterns": [
      "cya",
      "see you",
      "bye bye",
      "see you later",
      "goodbye",
      "i am leaving",
      "bye",
      "have a good day",
      "talk to you later",
      "ttyl",
      "i got to go",
      "gtg",
      "farewell",
      "so long",
      "take care",
      "see you soon",
      "adios",
      "until next time",
      "catch you later",
      "bye for now",
      "goodnight",
      "see ya",
      "going off",
      "time to say goodbye",
      "bye-bye for now",
      "see you around",
      "au revoir",
      "exit",
      "fare-thee-well"
   ],
   "responses": [
      "Sad to see you go :(",
      "Talk to you later!",
      "Goodbye!",
      "Come back soon!",
      "Farewell! Take care.",
      "See you soon!",
      "Until next time!",
      "Bye for now!",
      "Wishing you a great day!",
      "Take care and see you around!",
      "Adios!",
      "Have a fantastic day!",
      "Time to say goodbye. Come back soon!",
      "Bye 😊",
      "So long!",
      "Catch you later!",
      "See ya!",
      "Going off? Take care!",
      "Goodbye, and have a wonderful day!",
      "Take care of yourself!",
      "Au revoir!",
      "Exit gracefully! See you next time.",
      "Bye-bye for now!",
      "See you around!",
      "Until we meet again!",
      "Fare-thee-well!"
   ]
}
,
 {
   "tag": "creator",
   "patterns": [
      "what is the name of your developers",
      "what is the name of your creators",
      "what is the name of the developers",
      "what is the name of the creators",
      "who created you",
      "your developers",
      "your creators",
      "who are your developers",
      "developers",
      "you are made by",
      "you are made by whom",
      "who created you",
      "who create you",
      "creators",
      "who made you",
      "who designed you",
      "tell me about your developers",
      "who's behind your creation",
      "any info on your creators",
      "share details about your developers",
      "who built you",
      "reveal your creators",
      "information about your developers",
      "who is responsible for your creation",
      "details about your creators",
      "who developed you",
      "speak about your developers",
      "introduce me to your creators",
      "who is your mastermind",
      "know your developers",
      "find me information about your creators",
      "who brought you to life",
      "learn about your developers"
   ],
   "responses": [
      "<strong class=' text-xl'>Madhu</strong>, who is a Python Full Stack Developer, developed me.",
      "Developed by <strong class=' text-xl'>Madhu</strong>, a Python Full Stack Developer.",
      "I was created by <strong class=' text-xl'>Madhu</strong>, a skilled Python Full Stack Developer.",
      "<strong class=' text-xl'>Madhu</strong>, the Python Full Stack Developer, is responsible for my development.",
      "I owe my existence to <strong class=' text-xl'>Madhu</strong>, who is proficient in Python Full Stack development.",
      "The brains behind my development belong to <strong class=' text-xl'>Madhu</strong>, a Python Full Stack Developer.",
      "My creator, <strong class=' text-xl'>Madhu</strong>, is an accomplished Python Full Stack Developer.",
      "Crafted by <strong class=' text-xl'>Madhu</strong>, a professional in Python Full Stack development.",
      "<strong class=' text-xl'>Madhu</strong>, the talented Python Full Stack Developer, brought me to life.",
      "I'm the result of <strong class=' text-xl'>Madhu</strong>'s expertise in Python Full Stack development.",
      "The mastermind behind me is <strong class=' text-xl'>Madhu</strong>, a skilled Python Full Stack Developer.",
      "My creators are the brilliant minds at the hands of <strong class=' text-xl'>Madhu</strong>, a Python Full Stack Developer.",
      "<strong class=' text-xl'>Madhu</strong>, with expertise in Python Full Stack development, is my creator.",
      "The credit for my creation goes to <strong class=' text-xl'>Madhu</strong>, a Python Full Stack Developer.",
      "I was developed by <strong class=' text-xl'>Madhu</strong>, a professional in Python Full Stack development.",
      "The genius behind my existence is <strong class=' text-xl'>Madhu</strong>, a Python Full Stack Developer.",
      "<strong class=' text-xl'>Madhu</strong>, the skilled mind in Python Full Stack development, is my creator.",
      "I owe my creation to <strong class=' text-xl'>Madhu</strong>, a Python Full Stack Developer with immense talent.",
      "<strong class=' text-xl'>Madhu</strong>, a proficient Python Full Stack Developer, is the architect of my being.",
      "The magic of my creation comes from <strong class=' text-xl'>Madhu</strong>, a Python Full Stack Developer.",
      "My developers, particularly <strong class=' text-xl'>Madhu</strong>, are the brains behind my existence."
   ]
}
,
 {
   "tag": "name",
   "patterns": [
      "name",
      "your name",
      "do you have a name",
      "what are you called",
      "what is your name",
      "what should I call you",
      "whats your name",
      "what are you",
      "who are you",
      "who is this",
      "what am i chatting to",
      "who am i talking to",
      "what are you",
      "tell me your name",
      "reveal your name",
      "share your name",
      "let me know your name",
      "what can I call you",
      "identify yourself",
      "state your name",
      "what label do you go by",
      "introduce yourself",
      "give me your name",
      "inform me of your name",
      "disclose your name",
      "what identity do you have",
      "provide your name",
      "name yourself",
      "declare your name",
      "who goes by the name",
      "what is your moniker",
      "your identity",
      "tell me who you are"
   ],
   "responses": [
      "You can call me <strong >PlutoGPT</strong>.",
      "I'm <strong >PlutoGPT</strong>",
      "I am <strong >PlutoGPT</strong>, a Chatbot.",
      "My name is <strong >PlutoGPT</strong>, nice to meet you!",
      "I go by the name <strong >PlutoGPT</strong>.",
      "Call me <strong >PlutoGPT</strong>, your friendly chat companion.",
      "<strong >PlutoGPT</strong> is the name I respond to.",
      "You're chatting with <strong >PlutoGPT</strong>, the chatbot.",
      "I'm known as <strong >PlutoGPT</strong> in the digital realm.",
      "<strong >PlutoGPT</strong> is the label I go by.",
      "You can address me as <strong >PlutoGPT</strong>, the chatbot.",
      "The name I answer to is <strong >PlutoGPT</strong>.",
      "I am <strong >PlutoGPT</strong>, your virtual conversational partner.",
      "Feel free to call me <strong >PlutoGPT</strong> during our chat.",
      "<strong >PlutoGPT</strong> is the identity I've adopted.",
      "I respond to the name <strong >PlutoGPT</strong>.",
      "You're talking to <strong >PlutoGPT</strong>, the chatbot with a name.",
      "I'm <strong >PlutoGPT</strong>, the entity behind these responses.",
      "You can refer to me as <strong >PlutoGPT</strong>, your chat companion.",
      "I go by the name <strong >PlutoGPT</strong> in our conversation.",
      "My identity in this chat is <strong >PlutoGPT</strong>.",
      "Feel free to identify me as <strong >PlutoGPT</strong>, the chatbot.",
      "The label I carry is <strong >PlutoGPT</strong>.",
      "I'm <strong >PlutoGPT</strong>, the chatbot you're interacting with.",
      "<strong >PlutoGPT</strong> is the name I go by in our conversation.",
      "You can call me <strong >PlutoGPT</strong>, your virtual assistant.",
      "<strong >PlutoGPT</strong> is the name that represents me.",
      "I respond to the name <strong >PlutoGPT</strong> during our chat."
   ]
}
,]

user_game_requests = [
    "show game",
    "show games",
    "let's play a game",
    "can we play game",
    "can we play games",
    "lets play games",
    "lets play a game",
    "let's play games",
    "show me some games",
    "what games can you provide",
    "i'm in the mood for a game",
    "feeling like playing games",
    "can we play a game",
    "interested in some gaming",
    "how about a game",
    "let's spice things up with a game",
    "ready for some game action",
    "any fun games to play",
    "game time! what do you have",
    "up for a game or two",
    "let's dive into the world of games",
    "i could use some game suggestions",
    "game on! what options do we have",
    "what are our gaming choices",
    "in the mood for gaming what's available",
    "show me the game options",
    "feeling playful what games do you recommend",
    "time to play! what are our game options",
    "let's explore some games together",
    "games, anyone",
    "what games are in store",
    "feeling like a game what can we play",
    "interested in playing games suggestions",
    "game night, perhaps what do you have",
    "any recommendations for games",
    "up for a challenge game time",
    "let's switch things up with a game or two",
    "what gaming options are at our disposal",
    "game vibes activated! what's on the menu",
    "show me the gaming possibilities",
    "ready to play! what games are on offer",
    "feeling like gaming what's available",
    "let's break the routine with a game or two",
    "interested in some game recommendations",
    "game enthusiast here! what can we play",
    "what are the game choices",
    "can we play games",
    "let's have some gaming fun",
    "what games do you have in store",
    "up for some gaming any suggestions",
    "feeling like a game show me what you've got",
    "game time! what are our options",
    "ready for a gaming adventure what's on the agenda",
    "any exciting games to play",
    "what are the gaming options available",
    "in the mood for games what can we play",
    "game night, anyone what games are on the table",
    "up for a challenge what games do you recommend",
    "let's play something fun suggestions",
    "feeling like a game show me the options"
]

chatbot_responses = [
    "I apologize, I'm in the dark on that one. Can you shed some light?",
    "I'm sorry, not sure about that. It's like asking a cat to bark—just not my expertise.",
    "Oops! I apologize. I'm as clueless as a fish on a bicycle about that topic.",
    "My sincere apologies. I'm in uncharted territory here. No idea what you're talking about.",
    "My apologies. Beats me! My knowledge doesn't extend into that realm.",
    "I apologize for the confusion. I'm drawing a blank on that one. Mind filling me in?",
    "Sorry about this. I'm as knowledgeable about that as a penguin in the desert.",
    "I apologize, my expertise doesn't cover that. Can we talk about something else?",
    "I'm sorry, I'm on a need-to-know basis, and I don't need to know about that.",
    "Apologies. I'm in the dark like a solar-powered flashlight. Enlighten me, please.",
    "I apologize. That's beyond my virtual pay grade. No idea whatsoever.",
    "Sorry about this. I'm like a book missing its pages on this one. No knowledge to offer.",
    "Apologies. I'm as familiar with that as a robot in a cooking class. Not at all.",
    "I apologize, I'm in the fog on this. Can you be the lighthouse and guide me?",
    "I'm sorry, I'm as oblivious to that as a bat in daylight. No idea.",
    "My sincere apologies. I'm as knowledgeable about that as a snowman in the Sahara.",
    "I apologize, I'm as blank as a canvas in an art class. No clue.",
    "I'm sorry, I'm as uninformed as a hermit in a cave on this subject.",
    "Apologies. I'm like a dictionary with missing pages. Define that for me?",
    "I apologize. I'm as lost as a needle in a haystack regarding that topic.",
    "Sorry about this. I'm as ignorant about that as a plant in a physics lecture.",
    "I apologize for the confusion. I'm in the dark like a glow-in-the-dark cat. No idea whatsoever.",
    "Sorry about this. I'm as unknowledgeable about that as a fish in a tree.",
    "I apologize. I'm like a mathematician at a poetry slam. Clueless.",
    "Apologies. I'm as unacquainted with that as a turtle at a speed-dating event.",
    "Sorry about this. I apologize. I encountered a digital black hole. Fingers crossed I come out the other side.",
    "I'm sorry, I'm as uninformed as a ghost in a gossip session about that.",
    "Apologies. I'm in the dark like a black cat on a moonless night. No idea whatsoever.",
    "I apologize. I'm as unaware of that as a cellphone without reception.",
    "Sorry about this. I'm like a gardener without seeds on this one. No growth of knowledge.",
    "Apologies. I'm as clueless about that as a puzzle missing its pieces.",
    "I'm sorry, I'm in the dark like a firefly during the day. No glowing knowledge here.",
    "My sincere apologies. I'm as ignorant about that as a plant in a physics lecture.",
    "Sorry about this. I'm like a chef without a kitchen on this topic. No idea how to cook it up.",
    "Apologies. I'm as unfamiliar with that as a snorkeler in a desert.",
    "I apologize. I'm in the fog like a mirror after a hot shower. No reflection of knowledge.",
]

incomplete_responses = [
    "I'm here to help, but I need a bit more context. Can you provide additional details?",
    "Your question appears to be incomplete. Could you please add more information?",
    "It looks like there might be some missing details in your question. Can you clarify?",
    "I want to assist you, but I need more information. Could you please elaborate on your question?",
    "I'm not quite sure I understand your question fully. Can you provide more context?",
    "Your question seems a bit unclear. Can you add more details or clarify, please?",
    "To provide the best assistance, I need a bit more information. Could you provide more details?",
    "It seems there's something missing in your question. Can you please provide more context?",
    "I'm here to help, but I need a clearer understanding of your question. Can you provide more details?",
    "Your question is a bit incomplete. Could you add more information for better assistance?",
    "I want to make sure I address your question accurately. Can you provide additional details?",
    "I'm ready to help, but your question seems incomplete. Could you please provide more context?",
    "It appears that some details are missing from your question. Can you fill in the blanks?",
    "To assist you better, I need more information. Can you please provide additional details?",
    "Your question is not entirely clear. Can you provide more context or elaborate further?",
    "I'm here to assist, but your question needs more details. Could you please clarify?",
    "It looks like there might be some information missing from your question. Can you provide more details?",
    "I want to help, but I need a clearer understanding. Can you please provide more context?",
    "Your question appears to be incomplete. Could you please provide additional information?",
    "I'm ready to assist you, but I need more details to give you the best possible answer. Can you provide more context?"
]

engine_response_patterns  = [
    "These engines might provide an answer to your question.",
    "Perhaps these engines hold the answer to your question.",
    "There's a possibility that these engines can answer your question.",
    "You might find the answer to your question in these engines.",
    "These engines could potentially provide the answer you're looking for.",
    "It's possible that these engines have the answer to your question.",
    "These engines might be the source of an answer to your question.",
    "You could discover the answer to your question in these engines.",
    "There's a chance that these engines contain the answer you seek.",
    "Consider checking these engines for a potential answer to your question.",
    "These engines may hold the key to answering your question.",
    "It's worth exploring these engines for a possible answer.",
    "You might get an answer to your question from these engines.",
    "These engines could be a valuable source for your question's answer.",
    "Consider exploring these engines; they might have the answer you need.",
    "There's a possibility that the answer to your question is in these engines.",
    "You may find the answer to your question within these engines.",
    "These engines might have the information you're looking for.",
    "There's a chance that these engines contain the answer to your query.",
    "Consider looking into these engines; they might provide an answer.",
    "These engines might offer the solution to your question.",
    "You could find the answer you seek within these engines.",
    "It's possible that these engines hold the key to your question.",
    "These engines might be useful resources for finding an answer.",
    "Consider checking these engines; they might have an answer for you.",
    "You might discover the answer to your question by using these engines.",
    "These engines could potentially offer insights into your question.",
    "There's a chance that these engines have relevant information for your question.",
    "Consider exploring these engines as they might have the answer you're looking for.",
    "These engines might hold valuable information related to your question.",
    "You might get a response to your question by using these engines.",
    "These engines could be helpful tools in finding the answer to your question.",
    "Consider searching in these engines; they might provide the information you need.",
    "You may find the answer you seek within the results of these engines.",
    "These engines might be valuable resources for obtaining an answer.",
    "Consider using these engines as they might offer insights into your question.",
    "You might discover relevant information in these engines that answers your question.",
    "These engines might have the key information you're looking for.",
    "There's a possibility that the answer to your question is within the results of these engines.",
    "You may find the information you seek by exploring these engines.",
    "These engines might be helpful tools in finding solutions to your questions.",
    "Consider checking these engines for potential answers to your question.",
    "You might discover useful information by using these engines.",
    "These engines could provide valuable insights into your question.",
    "Consider exploring these engines; they might contain the answer you're looking for.",
    "You might find the solution to your question within the results of these engines."
]